class LocalizationForm extends HTMLElement{constructor(){super(),this.elements={input:this.querySelector('input[name="locale_code"], input[name="country_code"]'),button:this.querySelector("button"),panel:this.querySelector("ul")},this.elements.button.addEventListener("click",this.openSelector.bind(this)),this.elements.button.addEventListener("focusout",this.closeSelector.bind(this)),this.addEventListener("keyup",this.onContainerKeyUp.bind(this)),this.querySelectorAll("a").forEach(e=>e.addEventListener("click",this.onItemClick.bind(this)))}hidePanel(){this.elements.button.setAttribute("aria-expanded","false"),this.elements.panel.setAttribute("hidden",!0)}onContainerKeyUp(e){"ESCAPE"===e.code.toUpperCase()&&(this.hidePanel(),this.elements.button.focus())}onItemClick(e){e.preventDefault();const t=this.querySelector("form");this.elements.input.value=e.currentTarget.dataset.value,t&&t.submit()}openSelector(){this.elements.button.focus(),this.elements.panel.toggleAttribute("hidden"),this.elements.button.setAttribute("aria-expanded",("false"===this.elements.button.getAttribute("aria-expanded")).toString())}closeSelector(e){const t=e.relatedTarget&&"BUTTON"===e.relatedTarget.nodeName;(null===e.relatedTarget||t)&&this.hidePanel()}}customElements.define("localization-form",LocalizationForm);